{"ast":null,"code":"var _jsxFileName = \"F:\\\\Project\\\\Web\\\\demoprojectreact\\\\src\\\\classes\\\\ClassesList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport StudentList from '../students/StudentList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ClassesList = props => {\n  _s();\n\n  const [arr, setData] = useState(props);\n  const [rowId, setRowId] = useState(0);\n  React.useEffect(() => {\n    setData(props.clist);\n  }, [props.clist]);\n\n  function deleteClass(id) {\n    let arrayClass = [...props.clist];\n    let classIndex = arrayClass.findIndex(a => a.clsId === id);\n\n    if (classIndex !== -1) {\n      arrayClass.splice(classIndex, 1);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"table-wrap\",\n    children: [/*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"wrapped confluenceTable tablesorter tablesorter-default\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"tablesorter-headerRow\",\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Class Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Location\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Teacher Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [props.clist.map(el => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            onClick: () => setRowId(el.id),\n            style: {\n              cursor: 'pointer'\n            },\n            children: el.clsName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            onClick: () => setRowId(el.id),\n            style: {\n              cursor: 'pointer'\n            },\n            children: el.location\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: el.teacherName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-light\",\n              onClick: deleteClass(el.id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 33\n          }, this)]\n        }, el.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 29\n        }, this)), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            class: \"btn btn-light\",\n            children: \"ADD\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), rowId > 0 ? /*#__PURE__*/_jsxDEV(StudentList, {\n      rowId: rowId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 26\n    }, this) : \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ClassesList, \"W4bit4oaXcp7I5WsLLmNL6I4fjA=\");\n\n_c = ClassesList;\nexport default ClassesList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ClassesList\");","map":{"version":3,"sources":["F:/Project/Web/demoprojectreact/src/classes/ClassesList.js"],"names":["React","useState","useEffect","ReactDOM","StudentList","ClassesList","props","arr","setData","rowId","setRowId","clist","deleteClass","id","arrayClass","classIndex","findIndex","a","clsId","splice","map","el","cursor","clsName","location","teacherName"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport StudentList from '../students/StudentList';\r\n\r\nconst ClassesList = (props) => {\r\n    const [arr, setData] = useState(props);\r\n    const [rowId, setRowId] = useState(0);\r\n\r\n    React.useEffect(() => {\r\n        setData(props.clist);\r\n    },[props.clist])\r\n    \r\n\r\n\r\n    function deleteClass(id) {\r\n        let arrayClass = [...props.clist];\r\n\r\n        let classIndex = arrayClass.findIndex(a => a.clsId === id);\r\n        if (classIndex !== -1) {\r\n            arrayClass.splice(classIndex, 1);\r\n            \r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"table-wrap\">\r\n            <table className=\"wrapped confluenceTable tablesorter tablesorter-default\">\r\n                <thead>\r\n                    <tr className=\"tablesorter-headerRow\">\r\n                        <th>\r\n                            Class Name\r\n                        </th>\r\n                        <th>\r\n                            Location\r\n                        </th>\r\n                        <th>\r\n                            Teacher Name\r\n                        </th>\r\n                        <th>\r\n\r\n                        </th>\r\n                        <th>\r\n\r\n                        </th>\r\n\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        props.clist.map(el => (\r\n                            <tr key={el.id}>\r\n\r\n                                <td onClick={() => setRowId(el.id)} style={{ cursor: 'pointer' }}>\r\n                                    {el.clsName}\r\n                                </td>\r\n                                <td onClick={() => setRowId(el.id)} style={{ cursor: 'pointer' }}>\r\n                                    {el.location}\r\n                                </td>\r\n                                <td>\r\n                                    {el.teacherName} \r\n                                </td>\r\n                                <td>\r\n                                    edit\r\n                                </td>\r\n                                <td>\r\n                                    <button className=\"btn btn-light\" onClick={deleteClass(el.id)}>Delete</button>\r\n                                </td>\r\n                            </tr>\r\n                        ))\r\n                    }\r\n                    <tr>\r\n                        <button type=\"button\" class=\"btn btn-light\">ADD</button>\r\n                    </tr>\r\n                </tbody>\r\n\r\n            </table>\r\n\r\n            {rowId > 0 ? <StudentList rowId={rowId} /> : \" \"}\r\n\r\n\r\n        </div>\r\n\r\n\r\n\r\n\r\n    );\r\n\r\n\r\n\r\n\r\n}\r\n\r\nexport default ClassesList;"]},"metadata":{},"sourceType":"module"}