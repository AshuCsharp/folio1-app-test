{"ast":null,"code":"var _jsxFileName = \"F:\\\\Project\\\\Web\\\\demoprojectreact\\\\src\\\\components\\\\classes\\\\ClassesForm.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialFieldValues = {\n  id: 0,\n  cname: \"\",\n  location: \"\",\n  fName: \"\",\n  lName: \"\",\n  Sal: \"\"\n};\n\nconst ClassesForm = ({\n  classes,\n  ...props\n}) => {\n  _s();\n\n  const ValidateForm = (fieldValues = values) => {\n    let temp = { ...errors\n    };\n    if ('name' in fieldValues) temp.cname = fieldValues.cname ? \"\" : \"This field is required.\";\n    if ('location' in fieldValues) temp.location = fieldValues.location ? \"\" : \"This field is required.\";\n    if ('fName' in fieldValues) temp.fName = fieldValues.fName ? \"\" : \"This field is required.\";\n    if ('lName' in fieldValues) temp.lName = fieldValues.lName ? \"\" : \"This field is required.\";\n    if ('Sal' in fieldValues) temp.Sal = fieldValues.Sal ? \"\" : \"This field is required.\";\n    setErrors({ ...temp\n    });\n    if (fieldValues == values) return Object.values(temp).every(x => x == \"\");\n  };\n\n  const {\n    values,\n    setValues,\n    errors,\n    setErrors,\n    handleInputChange,\n    resetForm\n  } = useForm(initialFieldValues, validate, props.setCurrentId);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (validate()) {\n      const onSuccess = () => {\n        resetForm(); //addToast(\"Submitted successfully\", { appearance: 'success' })\n      };\n\n      if (props.currentId == 0) props.createClass(values, onSuccess);else props.updateClass(props.currentId, values, onSuccess);\n    }\n  };\n\n  useEffect(() => {\n    if (props.currentId != 0) {\n      setValues({ ...props.dCandidateList.find(x => x.id == props.currentId)\n      });\n      setErrors({});\n    }\n  }, [props.currentId]);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Class Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"cname\",\n          value: values.cName,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Class Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"cname\",\n          value: values.cName,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Class Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"cname\",\n          value: values.cName,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Class Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"cname\",\n          value: values.cName,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Class Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"cname\",\n          value: values.cName,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ClassesForm, \"Nd9YSSB1SDu5d1tdmKROnAaQkLw=\", true);\n\n_c = ClassesForm;\nexport default ClassesForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ClassesForm\");","map":{"version":3,"sources":["F:/Project/Web/demoprojectreact/src/components/classes/ClassesForm.js"],"names":["React","PropTypes","initialFieldValues","id","cname","location","fName","lName","Sal","ClassesForm","classes","props","ValidateForm","fieldValues","values","temp","errors","setErrors","Object","every","x","setValues","handleInputChange","resetForm","useForm","validate","setCurrentId","handleSubmit","e","preventDefault","onSuccess","currentId","createClass","updateClass","useEffect","dCandidateList","find","cName"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n\r\nconst initialFieldValues = {\r\n\r\n    id: 0,\r\n    cname: \"\",\r\n    location: \"\",\r\n    fName: \"\",\r\n    lName: \"\",\r\n    Sal: \"\",\r\n}\r\n\r\nconst ClassesForm = ({ classes, ...props }) => {\r\n\r\n    const ValidateForm = (fieldValues = values) => {\r\n        let temp = { ...errors }\r\n\r\n        if ('name' in fieldValues)\r\n            temp.cname = fieldValues.cname ? \"\" : \"This field is required.\"\r\n        if ('location' in fieldValues)\r\n            temp.location = fieldValues.location ? \"\" : \"This field is required.\"\r\n        if ('fName' in fieldValues)\r\n            temp.fName = fieldValues.fName ? \"\" : \"This field is required.\"\r\n        if ('lName' in fieldValues)\r\n            temp.lName = fieldValues.lName ? \"\" : \"This field is required.\"\r\n        if ('Sal' in fieldValues)\r\n            temp.Sal = fieldValues.Sal ? \"\" : \"This field is required.\"\r\n\r\n        setErrors({\r\n            ...temp\r\n        })\r\n\r\n        if (fieldValues == values)\r\n            return Object.values(temp).every(x => x == \"\")\r\n    }\r\n\r\n\r\n    const {\r\n        values,\r\n        setValues,\r\n        errors,\r\n        setErrors,\r\n        handleInputChange,\r\n        resetForm\r\n    } = useForm(initialFieldValues, validate, props.setCurrentId)\r\n\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n        if (validate()) {\r\n            const onSuccess = () => {\r\n                resetForm()\r\n                //addToast(\"Submitted successfully\", { appearance: 'success' })\r\n            }\r\n            if (props.currentId == 0)\r\n                props.createClass(values, onSuccess)\r\n            else\r\n                props.updateClass(props.currentId, values, onSuccess)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (props.currentId != 0) {\r\n            setValues({\r\n                ...props.dCandidateList.find(x => x.id == props.currentId)\r\n            })\r\n            setErrors({})\r\n        }\r\n    }, [props.currentId])\r\n\r\n    return (\r\n        <form>\r\n            <tr>\r\n                <td><span>Class Name:</span></td>\r\n                <td><input type=\"text\" name=\"cname\" value={values.cName} onChange={handleInputChange}></input>\r\n                   \r\n                </td>\r\n            </tr>\r\n            <tr>\r\n                <td><span>Class Name:</span></td>\r\n                <td><input type=\"text\" name=\"cname\" value={values.cName} onChange={handleInputChange}></input>\r\n                   \r\n                </td>\r\n            </tr>\r\n            <tr>\r\n                <td><span>Class Name:</span></td>\r\n                <td><input type=\"text\" name=\"cname\" value={values.cName} onChange={handleInputChange}></input>\r\n                   \r\n                </td>\r\n            </tr>\r\n            <tr>\r\n                <td><span>Class Name:</span></td>\r\n                <td><input type=\"text\" name=\"cname\" value={values.cName} onChange={handleInputChange}></input>\r\n                   \r\n                </td>\r\n            </tr>\r\n            <tr>\r\n                <td><span>Class Name:</span></td>\r\n                <td><input type=\"text\" name=\"cname\" value={values.cName} onChange={handleInputChange}></input>\r\n                   \r\n                </td>\r\n            </tr>\r\n\r\n\r\n        </form>\r\n\r\n\r\n\r\n\r\n\r\n    );\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default ClassesForm;\r\n"]},"metadata":{},"sourceType":"module"}