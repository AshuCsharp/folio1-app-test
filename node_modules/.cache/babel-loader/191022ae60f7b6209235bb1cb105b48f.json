{"ast":null,"code":"var _jsxFileName = \"F:\\\\Project\\\\Web\\\\react-app\\\\src\\\\components\\\\students\\\\StudentList.js\";\nimport React from 'react';\nimport { Redirect, Link } from 'react-router-dom';\nimport * as dataApi from '../../api/dataApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass StudentList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      items: [],\n      gpaArray: [],\n      highestGPA: 0.0\n    };\n  }\n\n  componentDidMount() {\n    try {\n      dataApi.getStudentList().then(result => {\n        this.setState({\n          isLoaded: true,\n          items: result.item1\n        });\n      });\n    } catch {\n      this.setState({\n        error: true\n      });\n    }\n  }\n\n  deleteStudent(id) {\n    let array = [...this.state.items]; // make a separate copy of the array\n\n    let index = array.findIndex(x => x.id === id);\n\n    if (index !== -1) {\n      array.splice(index, 1);\n      this.setState({\n        items: array\n      });\n    }\n  }\n\n  render() {\n    const {\n      error,\n      isLoaded,\n      items\n    } = this.state;\n\n    if (error) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Error: \", error]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          id: \"gpamax\",\n          className: \"table table-bordered table-sm\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            className: \"thead-light\",\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \" Student Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Age\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                id: \"kidid\",\n                children: \"GPA\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: [items.filter(student => {\n              return student.folioClassId === parseInt(this.props.rowId);\n            }).map(el => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: [el.fname, \" \", el.lname]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: el.age\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                id: \"tdgpa\",\n                children: el.gpa\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\"  \", /*#__PURE__*/_jsxDEV(Link, {\n                  to: `studentadd/${el.id}`,\n                  params: {\n                    id: el.id\n                  },\n                  children: \"Edit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 65,\n                  columnNumber: 51\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => this.deleteStudent(el.id),\n                  className: \"btn btn-light\",\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 68,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 45\n              }, this)]\n            }, el.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 41\n            }, this)), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/StudentAdd\",\n                className: \"btn btn-light\",\n                children: \"Add\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n}\n\nexport default StudentList;","map":{"version":3,"sources":["F:/Project/Web/react-app/src/components/students/StudentList.js"],"names":["React","Redirect","Link","dataApi","StudentList","Component","constructor","props","state","error","isLoaded","items","gpaArray","highestGPA","componentDidMount","getStudentList","then","result","setState","item1","deleteStudent","id","array","index","findIndex","x","splice","render","filter","student","folioClassId","parseInt","rowId","map","el","fname","lname","age","gpa"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Redirect, Link } from 'react-router-dom';\r\nimport * as dataApi from '../../api/dataApi';\r\n\r\nclass StudentList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { error: null, isLoaded: false, items: [], gpaArray: [], highestGPA: 0.0 };\r\n    }\r\n\r\n    componentDidMount() {\r\n        try {\r\n            dataApi.getStudentList().then((result) => {\r\n                this.setState({ isLoaded: true, items: result.item1 });\r\n            });\r\n        } catch {\r\n            this.setState({ error: true });\r\n        }\r\n    }\r\n\r\n    deleteStudent(id) {\r\n        let array = [...this.state.items]; // make a separate copy of the array\r\n        let index = array.findIndex(x => x.id === id);\r\n        if (index !== -1) {\r\n            array.splice(index, 1);\r\n            this.setState({ items: array });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { error, isLoaded, items } = this.state;\r\n        if (error) {\r\n            return (\r\n                <div>\r\n                    <p>\r\n                        Error: {error}\r\n                    </p>\r\n                </div>\r\n            )\r\n        }\r\n        else {\r\n            return (\r\n                <div>\r\n                    \r\n                    <table id=\"gpamax\" className=\"table table-bordered table-sm\">\r\n                        <thead className=\"thead-light\">\r\n                            <tr>\r\n                                <th> Student Name</th>\r\n                                <th>Age</th>\r\n                                <th id=\"kidid\">GPA</th>\r\n                                <th></th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>                          \r\n\r\n                                {\r\n                                    items.filter((student) => { return student.folioClassId === parseInt(this.props.rowId) }).map(el => (\r\n\r\n                                        <tr key={el.id}>\r\n                                            <td>{el.fname} {el.lname}</td>\r\n                                            <td>{el.age}</td>\r\n                                            <td id=\"tdgpa\">{el.gpa}</td>\r\n\r\n                                            <td>  <Link to={`studentadd/${el.id}`} params={{ id: el.id }}>Edit</Link></td>\r\n\r\n                                            <td>\r\n                                                <button onClick={() => this.deleteStudent(el.id)} className=\"btn btn-light\">\r\n                                                    Delete\r\n                                            </button>\r\n                                            </td>\r\n                                        </tr>\r\n\r\n                                    ))\r\n                                }\r\n                           \r\n                            <tr>\r\n                                <Link to=\"/StudentAdd\" className=\"btn btn-light\">Add</Link>\r\n\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default StudentList;\r\n\r\n"]},"metadata":{},"sourceType":"module"}