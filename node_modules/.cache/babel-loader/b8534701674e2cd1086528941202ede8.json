{"ast":null,"code":"var _jsxFileName = \"F:\\\\Project\\\\Web\\\\demoprojectreact\\\\src\\\\students\\\\StudentList.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass StudentList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      slist: [],\n      highest: 100\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://6079395e460a6600174fb472.mockapi.io/api/v1/Students/').then(res => res.json()).then(data => {\n      this.setState({\n        slist: data\n      });\n    }).catch(console.log);\n    this.HighestMarks();\n  }\n\n  HighestMarks() {\n    console.log(this.state.slist.map(el => el.stuGpa));\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Student Data \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"wrapped confluenceTable tablesorter tablesorter-default\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: \"tablesorter-headerRow\",\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \" Student Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Age\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"GPA\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [this.state.slist.filter(student => {\n            return student.clsId === parseInt(this.props.rowId);\n          }).map(el => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: [el.stuFName, \" \", el.stuLName]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: el.stuAge\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: el.stuGpa\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 37\n            }, this)]\n          }, el.stuId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 33\n          }, this)), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              class: \"btn btn-light\",\n              children: \"ADD\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default StudentList;","map":{"version":3,"sources":["F:/Project/Web/demoprojectreact/src/students/StudentList.js"],"names":["React","ReactDOM","StudentList","Component","constructor","props","state","slist","highest","componentDidMount","fetch","then","res","json","data","setState","catch","console","log","HighestMarks","map","el","stuGpa","render","filter","student","clsId","parseInt","rowId","stuFName","stuLName","stuAge","stuId"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;;;AAGA,MAAMC,WAAN,SAA0BF,KAAK,CAACG,SAAhC,CAA0C;AACtCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE,EADE;AAETC,MAAAA,OAAO,EAAE;AAFA,KAAb;AAMH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,KAAK,CAAC,8DAAD,CAAL,CACKC,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAEWG,IAAD,IAAU;AACZ,WAAKC,QAAL,CAAc;AAAER,QAAAA,KAAK,EAAEO;AAAT,OAAd;AACH,KAJL,EAKKE,KALL,CAKWC,OAAO,CAACC,GALnB;AAQA,SAAKC,YAAL;AAEH;;AAEDA,EAAAA,YAAY,GAAG;AAEXF,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKZ,KAAL,CAAWC,KAAX,CAAiBa,GAAjB,CAAqBC,EAAE,IAAIA,EAAE,CAACC,MAA9B,CAAZ;AACH;;AAEDC,EAAAA,MAAM,GAAG;AACL,wBAEI;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAO,QAAA,SAAS,EAAC,yDAAjB;AAAA,gCACI;AAAA,iCAEI;AAAI,YAAA,SAAS,EAAC,uBAAd;AAAA,oCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHJ,eAII;AAAA;AAAA;AAAA;AAAA,oBAJJ,eAKI;AAAA;AAAA;AAAA;AAAA,oBALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAWI;AAAA,qBAEQ,KAAKjB,KAAL,CAAWC,KAAX,CAAiBiB,MAAjB,CAAyBC,OAAD,IAAa;AAAE,mBAAOA,OAAO,CAACC,KAAR,KAAkBC,QAAQ,CAAC,KAAKtB,KAAL,CAAWuB,KAAZ,CAAjC;AAAqD,WAA5F,EAA8FR,GAA9F,CAAkGC,EAAE,iBAEhG;AAAA,oCACI;AAAA,yBACKA,EAAE,CAACQ,QADR,OACmBR,EAAE,CAACS,QADtB;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAII;AAAA,wBACKT,EAAE,CAACU;AADR;AAAA;AAAA;AAAA;AAAA,oBAJJ,eAOI;AAAA,wBACKV,EAAE,CAACC;AADR;AAAA;AAAA;AAAA;AAAA,oBAPJ,eAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAVJ,eAaI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAbJ;AAAA,aAASD,EAAE,CAACW,KAAZ;AAAA;AAAA;AAAA;AAAA,kBAFJ,CAFR,eAuBI;AAAA,mCACI;AAAQ,cAAA,IAAI,EAAC,QAAb;AAAsB,cAAA,KAAK,EAAC,eAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAvBJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AA6CH;;AA3EqC;;AA8E1C,eAAe9B,WAAf","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\n\r\nclass StudentList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            slist: [],\r\n            highest: 100\r\n\r\n        };\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('https://6079395e460a6600174fb472.mockapi.io/api/v1/Students/')\r\n            .then(res => res.json())\r\n            .then((data) => {\r\n                this.setState({ slist: data })\r\n            })\r\n            .catch(console.log)\r\n\r\n\r\n        this.HighestMarks();\r\n\r\n    }\r\n\r\n    HighestMarks() {\r\n\r\n        console.log(this.state.slist.map(el => el.stuGpa));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n\r\n            <div>\r\n                <p>Student Data </p>\r\n                <table className=\"wrapped confluenceTable tablesorter tablesorter-default\">\r\n                    <thead>\r\n\r\n                        <tr className=\"tablesorter-headerRow\">\r\n                            <th> Student Name</th>\r\n                            <th>Age</th>\r\n                            <th>GPA</th>\r\n                            <th></th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            this.state.slist.filter((student) => { return student.clsId === parseInt(this.props.rowId) }).map(el => (\r\n\r\n                                <tr key={el.stuId}>\r\n                                    <td>\r\n                                        {el.stuFName} {el.stuLName}\r\n                                    </td>\r\n                                    <td>\r\n                                        {el.stuAge}\r\n                                    </td>\r\n                                    <td>\r\n                                        {el.stuGpa}\r\n                                    </td>\r\n                                    <td>\r\n                                        edit\r\n                                </td>\r\n                                    <td>\r\n                                        delete\r\n                                </td>\r\n                                </tr>\r\n                            ))\r\n                        }\r\n                        <tr>\r\n                            <button type=\"button\" class=\"btn btn-light\">ADD</button>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default StudentList;\r\n\r\n"]},"metadata":{},"sourceType":"module"}