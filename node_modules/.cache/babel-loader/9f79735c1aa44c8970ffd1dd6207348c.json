{"ast":null,"code":"var _jsxFileName = \"F:\\\\Project\\\\Web\\\\react-app\\\\src\\\\components\\\\students\\\\StudentAdd.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Redirect, Link } from 'react-router-dom';\nimport * as dataApi from '../../api/dataApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass StudentAdd extends React.Component {\n  constructor(props) {\n    super(props); // state will hold the student data for add and edit, lnamedata is used to \n    //match the unique last name.\n\n    this.state = {\n      fields: {},\n      errors: {},\n      lnamedata: {},\n      classList: []\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    let id = parseInt(this.props.match.params.id); //lnamedata will hold the student data \n\n    dataApi.getStudentList().then(result => {\n      this.setState({\n        lnamedata: result\n      }); //.item1\n    });\n    dataApi.getClassList().then(result => {\n      this.setState(() => {\n        return {\n          classList: result\n        };\n      }); //.item1\n    });\n\n    if (!isNaN(id)) {\n      //this is the case of edit\n      try {\n        this.setState({\n          fields: this.state.lnamedata.find(element => element.id === id)\n        }); //item1 need to me removed. result wil hold the object that user is modifying \n      } catch (error) {}\n    }\n  }\n\n  handleChange(field, e) {\n    let fields = this.state.fields;\n    fields[field] = e.target.value;\n    this.setState({\n      fields\n    });\n  } //this is where form validation checks\n\n\n  handleSubmit(event) {\n    let fields = this.state.fields;\n    let errors = {};\n    let formIsValid = true;\n    debugger;\n\n    if (!fields[\"fname\"]) {\n      formIsValid = false;\n      errors[\"fname\"] = \"Cannot be empty\";\n    }\n\n    if (!fields[\"lname\"]) {\n      formIsValid = false;\n      errors[\"lname\"] = \"Cannot be empty\";\n    } else {\n      handleNameCondition();\n    }\n\n    const handleNameCondition = () => {\n      if (fields[\"lname\"]) {\n        // this.state.lnamedata.map(a => console.log(a.lname.toUpperCase()))\n        let id = parseInt(this.props.match.params.id);\n\n        if (!isNaN(id)) {\n          let oldlname = this.state.lnamedata.find(element => parseInt(element.id) === id);\n\n          if (oldlname.lname.toUpperCase() !== fields[\"lname\"].toUpperCase()) {\n            if (this.state.lnamedata.find(e => {\n              e.lname.toUpperCase() === fields[\"lname\"].toUpperCase();\n            })) {\n              formIsValid = false; //errors[\"lname\"] = \"Last name can't be similar\";\n            }\n          }\n        } else {\n          if (typeof this.state.lnamedata !== 'undefined') {\n            if (this.state.lnamedata.find(e => {\n              e.lname.toUpperCase() === fields[\"lname\"].toUpperCase();\n            })) {\n              formIsValid = false;\n              errors[\"lname\"] = \"Last name can't be similar\";\n            }\n          }\n        }\n      }\n    };\n\n    if (!fields[\"age\"]) {\n      formIsValid = false;\n      errors[\"age\"] = \"Cannot be empty\";\n    }\n\n    if (!fields[\"gpa\"]) {\n      formIsValid = false;\n      errors[\"gpa\"] = \"Cannot be empty\";\n    }\n\n    if (fields[\"folioClassId\"] === 0) {\n      formIsValid = false;\n      errors[\"folioClassId\"] = \"Cannot be empty\";\n    }\n\n    this.setState({\n      errors: errors\n    });\n    return formIsValid;\n  }\n\n  contactSubmit(e) {\n    e.preventDefault();\n    const formData = this.state.fields;\n\n    if (typeof formData.id === 'undefined') {\n      if (this.handleSubmit()) {\n        //case of add\n        const requestOptions = {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            formData\n          })\n        };\n        console.log(JSON.stringify({\n          formData\n        }));\n        fetch('https://6079395e460a6600174fb472.mockapi.io/api/v1/Students', requestOptions).then(response => response.json());\n      } else {\n        alert(JSON.stringify(this.state.errors));\n      }\n    } else {\n      //case of edit\n      if (this.handleSubmit()) {\n        const requestOptions = {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            formData\n          })\n        };\n        console.log(JSON.stringify({\n          formData\n        }));\n        fetch('https://6079395e460a6600174fb472.mockapi.io/api/v1/Students/' + id, requestOptions).then(response => response.json());\n      } else {\n        alert(JSON.stringify(this.state.errors));\n      }\n    }\n  }\n\n  render() {\n    let _state = this.state;\n    const classOptions = this.state.classList.map(function (element) {\n      return /*#__PURE__*/_jsxDEV(\"option\", {\n        value: element.id,\n        selected: element.id == _state.fields[\"folioClassId\"],\n        children: element.cname\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 20\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: this.contactSubmit.bind(this),\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table table-bordered table-sm \",\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"required-field\",\n              children: \"First Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              size: \"30\",\n              type: \"text\",\n              name: \"fname\",\n              onChange: this.handleChange.bind(this, \"fname\"),\n              value: this.state.fields[\"fname\"]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"required-field\",\n              children: \"Last Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              size: \"30\",\n              type: \"text\",\n              name: \"lname\",\n              onChange: this.handleChange.bind(this, \"lname\"),\n              value: this.state.fields[\"lname\"]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"required-field\",\n              children: \"Age\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 30\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              pattern: \"[0-9]*\",\n              inputmode: \"numeric\",\n              name: \"age\",\n              onChange: this.handleChange.bind(this, \"age\"),\n              value: this.state.fields[\"age\"]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"GPA\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              step: \"0.01\",\n              inputmode: \"numeric\",\n              name: \"gpa\",\n              onChange: this.handleChange.bind(this, \"gpa\"),\n              value: this.state.fields[\"gpa\"]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"required-field\",\n              children: \"Class Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"select\", {\n              name: \"folioClassId\",\n              onChange: this.handleChange.bind(this, \"classList\"),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"0\",\n                children: \"Select\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 33\n              }, this), classOptions]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              children: \"Add Student\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 29\n            }, this), \"\\xA0\\xA0 \", /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/\",\n              className: \"btn btn-primary\",\n              children: \"Back to Main\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 70\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default StudentAdd;","map":{"version":3,"sources":["F:/Project/Web/react-app/src/components/students/StudentAdd.js"],"names":["React","useState","useEffect","Redirect","Link","dataApi","StudentAdd","Component","constructor","props","state","fields","errors","lnamedata","classList","handleChange","bind","handleSubmit","componentDidMount","id","parseInt","match","params","getStudentList","then","result","setState","getClassList","isNaN","find","element","error","field","e","target","value","event","formIsValid","handleNameCondition","oldlname","lname","toUpperCase","contactSubmit","preventDefault","formData","requestOptions","method","headers","body","JSON","stringify","console","log","fetch","response","json","alert","render","_state","classOptions","map","cname"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,QAAT,EAAmBC,IAAnB,QAA+B,kBAA/B;AACA,OAAO,KAAKC,OAAZ,MAAyB,mBAAzB;;;AAGA,MAAMC,UAAN,SAAyBN,KAAK,CAACO,SAA/B,CAAyC;AACrCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN,EADe,CAGf;AACA;;AAEA,SAAKC,KAAL,GAAa;AACTC,MAAAA,MAAM,EAAE,EADC;AAETC,MAAAA,MAAM,EAAE,EAFC;AAGTC,MAAAA,SAAS,EAAE,EAHF;AAITC,MAAAA,SAAS,EAAC;AAJD,KAAb;AAOA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AACH;;AAGDE,EAAAA,iBAAiB,GAAG;AAEhB,QAAIC,EAAE,GAAGC,QAAQ,CAAC,KAAKX,KAAL,CAAWY,KAAX,CAAiBC,MAAjB,CAAwBH,EAAzB,CAAjB,CAFgB,CAGhB;;AACAd,IAAAA,OAAO,CAACkB,cAAR,GAAyBC,IAAzB,CAA+BC,MAAD,IAAY;AACtC,WAAKC,QAAL,CAAc;AAAEb,QAAAA,SAAS,EAAEY;AAAb,OAAd,EADsC,CACA;AACzC,KAFD;AAGApB,IAAAA,OAAO,CAACsB,YAAR,GAAuBH,IAAvB,CAA6BC,MAAD,IAAY;AACpC,WAAKC,QAAL,CAAc,MAAI;AACb,eAAO;AAACZ,UAAAA,SAAS,EAAEW;AAAZ,SAAP;AACH,OAFF,EADoC,CAG/B;AACR,KAJD;;AAKA,QAAI,CAACG,KAAK,CAACT,EAAD,CAAV,EAAgB;AACZ;AACA,UAAI;AAGA,aAAKO,QAAL,CAAc;AAAEf,UAAAA,MAAM,EAAE,KAAKD,KAAL,CAAWG,SAAX,CAAqBgB,IAArB,CAA0BC,OAAO,IAAIA,OAAO,CAACX,EAAR,KAAeA,EAApD;AAAV,SAAd,EAHA,CAGoF;AAEvF,OALD,CAKE,OAAOY,KAAP,EAAc,CAEf;AACJ;AACJ;;AAEDhB,EAAAA,YAAY,CAACiB,KAAD,EAAQC,CAAR,EAAW;AACnB,QAAItB,MAAM,GAAG,KAAKD,KAAL,CAAWC,MAAxB;AACAA,IAAAA,MAAM,CAACqB,KAAD,CAAN,GAAgBC,CAAC,CAACC,MAAF,CAASC,KAAzB;AACA,SAAKT,QAAL,CAAc;AAAEf,MAAAA;AAAF,KAAd;AACH,GAhDoC,CAmDrC;;;AACAM,EAAAA,YAAY,CAACmB,KAAD,EAAQ;AAChB,QAAIzB,MAAM,GAAG,KAAKD,KAAL,CAAWC,MAAxB;AACA,QAAIC,MAAM,GAAG,EAAb;AACA,QAAIyB,WAAW,GAAG,IAAlB;AAER;;AACQ,QAAI,CAAC1B,MAAM,CAAC,OAAD,CAAX,EAAsB;AAClB0B,MAAAA,WAAW,GAAG,KAAd;AACAzB,MAAAA,MAAM,CAAC,OAAD,CAAN,GAAkB,iBAAlB;AACH;;AAED,QAAI,CAACD,MAAM,CAAC,OAAD,CAAX,EAAsB;AAClB0B,MAAAA,WAAW,GAAG,KAAd;AACAzB,MAAAA,MAAM,CAAC,OAAD,CAAN,GAAkB,iBAAlB;AACH,KAHD,MAGK;AACD0B,MAAAA,mBAAmB;AACtB;;AAKH,UAAMA,mBAAmB,GAAG,MAAM;AAAG,UAAI3B,MAAM,CAAC,OAAD,CAAV,EAAqB;AACpD;AAEA,YAAIQ,EAAE,GAAGC,QAAQ,CAAC,KAAKX,KAAL,CAAWY,KAAX,CAAiBC,MAAjB,CAAwBH,EAAzB,CAAjB;;AACA,YAAI,CAACS,KAAK,CAACT,EAAD,CAAV,EAAgB;AACZ,cAAIoB,QAAQ,GAAG,KAAK7B,KAAL,CAAWG,SAAX,CAAqBgB,IAArB,CAA0BC,OAAO,IAAIV,QAAQ,CAACU,OAAO,CAACX,EAAT,CAAR,KAAyBA,EAA9D,CAAf;;AACA,cAAIoB,QAAQ,CAACC,KAAT,CAAeC,WAAf,OAAiC9B,MAAM,CAAC,OAAD,CAAN,CAAgB8B,WAAhB,EAArC,EAAoE;AAChE,gBAAI,KAAK/B,KAAL,CAAWG,SAAX,CAAqBgB,IAArB,CAA0BI,CAAC,IAAI;AAAGA,cAAAA,CAAC,CAACO,KAAF,CAAQC,WAAR,EAAD,KAA4B9B,MAAM,CAAC,OAAD,CAAN,CAAgB8B,WAAhB,EAA5B;AAA2D,aAA5F,CAAJ,EAAmG;AAG/FJ,cAAAA,WAAW,GAAG,KAAd,CAH+F,CAI/F;AACH;AACJ;AACJ,SAVD,MAUO;AACH,cAAI,OAAQ,KAAK3B,KAAL,CAAWG,SAAnB,KAAkC,WAAtC,EAAmD;AAC/C,gBAAI,KAAKH,KAAL,CAAWG,SAAX,CAAqBgB,IAArB,CAA0BI,CAAC,IAAI;AAAGA,cAAAA,CAAC,CAACO,KAAF,CAAQC,WAAR,EAAD,KAA4B9B,MAAM,CAAC,OAAD,CAAN,CAAgB8B,WAAhB,EAA5B;AAA2D,aAA5F,CAAJ,EAAmG;AAC/FJ,cAAAA,WAAW,GAAG,KAAd;AACAzB,cAAAA,MAAM,CAAC,OAAD,CAAN,GAAkB,4BAAlB;AACH;AACJ;AACJ;AACJ;AAEA,KAxBH;;AA2BE,QAAI,CAACD,MAAM,CAAC,KAAD,CAAX,EAAoB;AAChB0B,MAAAA,WAAW,GAAG,KAAd;AACAzB,MAAAA,MAAM,CAAC,KAAD,CAAN,GAAgB,iBAAhB;AACH;;AAED,QAAI,CAACD,MAAM,CAAC,KAAD,CAAX,EAAoB;AAChB0B,MAAAA,WAAW,GAAG,KAAd;AACAzB,MAAAA,MAAM,CAAC,KAAD,CAAN,GAAgB,iBAAhB;AACH;;AAED,QAAID,MAAM,CAAC,cAAD,CAAN,KAA2B,CAA/B,EAAkC;AAC9B0B,MAAAA,WAAW,GAAG,KAAd;AACAzB,MAAAA,MAAM,CAAC,cAAD,CAAN,GAAyB,iBAAzB;AACH;;AAED,SAAKc,QAAL,CAAc;AAAEd,MAAAA,MAAM,EAAEA;AAAV,KAAd;AACA,WAAOyB,WAAP;AAEH;;AAEDK,EAAAA,aAAa,CAACT,CAAD,EAAI;AACbA,IAAAA,CAAC,CAACU,cAAF;AACA,UAAMC,QAAQ,GAAG,KAAKlC,KAAL,CAAWC,MAA5B;;AACA,QAAI,OAAQiC,QAAQ,CAACzB,EAAjB,KAAyB,WAA7B,EAA0C;AACtC,UAAI,KAAKF,YAAL,EAAJ,EAAyB;AACrB;AACA,cAAM4B,cAAc,GAAG;AACnBC,UAAAA,MAAM,EAAE,MADW;AAEnBC,UAAAA,OAAO,EAAE;AAAE,4BAAgB;AAAlB,WAFU;AAGnBC,UAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEN,YAAAA;AAAF,WAAf;AAHa,SAAvB;AAKAO,QAAAA,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACC,SAAL,CAAe;AAAEN,UAAAA;AAAF,SAAf,CAAZ;AAEAS,QAAAA,KAAK,CAAC,6DAAD,EAAgER,cAAhE,CAAL,CACKrB,IADL,CACU8B,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB;AAEH,OAXD,MAWO;AACHC,QAAAA,KAAK,CAACP,IAAI,CAACC,SAAL,CAAe,KAAKxC,KAAL,CAAWE,MAA1B,CAAD,CAAL;AACH;AACJ,KAfD,MAgBK;AACD;AACA,UAAI,KAAKK,YAAL,EAAJ,EAAyB;AACrB,cAAM4B,cAAc,GAAG;AACnBC,UAAAA,MAAM,EAAE,KADW;AAEnBC,UAAAA,OAAO,EAAE;AAAE,4BAAgB;AAAlB,WAFU;AAGnBC,UAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEN,YAAAA;AAAF,WAAf;AAHa,SAAvB;AAKAO,QAAAA,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACC,SAAL,CAAe;AAAEN,UAAAA;AAAF,SAAf,CAAZ;AAEAS,QAAAA,KAAK,CAAC,iEAAiElC,EAAlE,EAAsE0B,cAAtE,CAAL,CACKrB,IADL,CACU8B,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB;AAEH,OAVD,MAUO;AACHC,QAAAA,KAAK,CAACP,IAAI,CAACC,SAAL,CAAe,KAAKxC,KAAL,CAAWE,MAA1B,CAAD,CAAL;AACH;AACJ;AACJ;;AAID6C,EAAAA,MAAM,GAAG;AACL,QAAIC,MAAM,GAAG,KAAKhD,KAAlB;AACA,UAAMiD,YAAY,GAAE,KAAKjD,KAAL,CAAWI,SAAX,CAAqB8C,GAArB,CAAyB,UAAS9B,OAAT,EAAiB;AAC1D,0BAAO;AAAQ,QAAA,KAAK,EAAEA,OAAO,CAACX,EAAvB;AAA2B,QAAA,QAAQ,EAAEW,OAAO,CAACX,EAAR,IAAcuC,MAAM,CAAC/C,MAAP,CAAc,cAAd,CAAnD;AAAA,kBAAoFmB,OAAO,CAAC+B;AAA5F;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KAFmB,CAApB;AAGA,wBAEI;AAAM,MAAA,QAAQ,EAAE,KAAKnB,aAAL,CAAmB1B,IAAnB,CAAwB,IAAxB,CAAhB;AAAA,6BACI;AAAO,QAAA,SAAS,EAAC,gCAAjB;AAAA,gCACI;AAAA,kCACI;AAAA,mCACI;AAAM,cAAA,SAAS,EAAC,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADJ,eAII;AAAA,mCACI;AAAO,cAAA,IAAI,EAAC,IAAZ;AAAiB,cAAA,IAAI,EAAC,MAAtB;AAA6B,cAAA,IAAI,EAAC,OAAlC;AAA0C,cAAA,QAAQ,EAAE,KAAKD,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,EAA6B,OAA7B,CAApD;AAA2F,cAAA,KAAK,EAAE,KAAKN,KAAL,CAAWC,MAAX,CAAkB,OAAlB;AAAlG;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eASI;AAAA,kCACI;AAAA,mCACI;AAAM,cAAA,SAAS,EAAC,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADJ,eAII;AAAA,mCACI;AAAO,cAAA,IAAI,EAAC,IAAZ;AAAiB,cAAA,IAAI,EAAC,MAAtB;AAA6B,cAAA,IAAI,EAAC,OAAlC;AAA0C,cAAA,QAAQ,EAAE,KAAKI,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,EAA6B,OAA7B,CAApD;AAA2F,cAAA,KAAK,EAAE,KAAKN,KAAL,CAAWC,MAAX,CAAkB,OAAlB;AAAlG;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBATJ,eAiBI;AAAA,kCACI;AAAA,yCAAK;AAAM,cAAA,SAAS,EAAC,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAL;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA,mCAAI;AAAO,cAAA,IAAI,EAAC,QAAZ;AAAqB,cAAA,OAAO,EAAC,QAA7B;AAAsC,cAAA,SAAS,EAAC,SAAhD;AAA0D,cAAA,IAAI,EAAC,KAA/D;AAAqE,cAAA,QAAQ,EAAE,KAAKI,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,EAA6B,KAA7B,CAA/E;AAAoH,cAAA,KAAK,EAAE,KAAKN,KAAL,CAAWC,MAAX,CAAkB,KAAlB;AAA3H;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAjBJ,eAqBI;AAAA,kCACI;AAAA,mCAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA,mCAAI;AAAO,cAAA,IAAI,EAAC,QAAZ;AAAqB,cAAA,IAAI,EAAC,MAA1B;AAAiC,cAAA,SAAS,EAAC,SAA3C;AAAqD,cAAA,IAAI,EAAC,KAA1D;AAAgE,cAAA,QAAQ,EAAE,KAAKI,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,EAA6B,KAA7B,CAA1E;AAA+G,cAAA,KAAK,EAAE,KAAKN,KAAL,CAAWC,MAAX,CAAkB,KAAlB;AAAtH;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBArBJ,eAyBI;AAAA,kCACI;AAAA,mCACI;AAAM,cAAA,SAAS,EAAC,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADJ,eAII;AAAA,mCACI;AAAQ,cAAA,IAAI,EAAC,cAAb;AAA4B,cAAA,QAAQ,EAAE,KAAKI,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,EAA6B,WAA7B,CAAtC;AAAA,sCACI;AAAQ,gBAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,EAEM2C,YAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAzBJ,eAqCI;AAAA,iCACI;AAAA,oCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,4BAC6C,QAAC,IAAD;AAAM,cAAA,EAAE,EAAC,GAAT;AAAa,cAAA,SAAS,EAAC,iBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAD7C;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBArCJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFJ;AAgDH;;AApNoC;;AAuNzC,eAAerD,UAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Redirect, Link } from 'react-router-dom';\r\nimport * as dataApi from '../../api/dataApi';\r\n\r\n\r\nclass StudentAdd extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        // state will hold the student data for add and edit, lnamedata is used to \r\n        //match the unique last name.\r\n\r\n        this.state = {\r\n            fields: {},\r\n            errors: {},\r\n            lnamedata: {},\r\n            classList:[]\r\n        }\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        \r\n        let id = parseInt(this.props.match.params.id);\r\n        //lnamedata will hold the student data \r\n        dataApi.getStudentList().then((result) => {\r\n            this.setState({ lnamedata: result }); //.item1\r\n        });\r\n        dataApi.getClassList().then((result) => {\r\n            this.setState(()=>{\r\n                 return {classList: result}\r\n             }); //.item1\r\n        });\r\n        if (!isNaN(id)) {\r\n            //this is the case of edit\r\n            try {\r\n              \r\n\r\n                this.setState({ fields: this.state.lnamedata.find(element => element.id === id) }); //item1 need to me removed. result wil hold the object that user is modifying \r\n\r\n            } catch (error) {\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    handleChange(field, e) {\r\n        let fields = this.state.fields;\r\n        fields[field] = e.target.value;\r\n        this.setState({ fields });\r\n    }\r\n\r\n\r\n    //this is where form validation checks\r\n    handleSubmit(event) {\r\n        let fields = this.state.fields;\r\n        let errors = {};\r\n        let formIsValid = true;\r\n\r\ndebugger;\r\n        if (!fields[\"fname\"]) {\r\n            formIsValid = false;\r\n            errors[\"fname\"] = \"Cannot be empty\";\r\n        }\r\n\r\n        if (!fields[\"lname\"]) {\r\n            formIsValid = false;\r\n            errors[\"lname\"] = \"Cannot be empty\";\r\n        }else{\r\n            handleNameCondition();\r\n        }\r\n\r\n\r\n\r\n\r\n      const handleNameCondition = () => {  if (fields[\"lname\"]) {\r\n            // this.state.lnamedata.map(a => console.log(a.lname.toUpperCase()))\r\n           \r\n            let id = parseInt(this.props.match.params.id);\r\n            if (!isNaN(id)) {\r\n                let oldlname = this.state.lnamedata.find(element => parseInt(element.id) === id)\r\n                if (oldlname.lname.toUpperCase() !== fields[\"lname\"].toUpperCase()) {\r\n                    if (this.state.lnamedata.find(e => { (e.lname.toUpperCase()) === fields[\"lname\"].toUpperCase() })) {\r\n                       \r\n                        \r\n                        formIsValid = false;\r\n                        //errors[\"lname\"] = \"Last name can't be similar\";\r\n                    }\r\n                }\r\n            } else {\r\n                if (typeof (this.state.lnamedata) !== 'undefined') {\r\n                    if (this.state.lnamedata.find(e => { (e.lname.toUpperCase()) === fields[\"lname\"].toUpperCase() })) {\r\n                        formIsValid = false;\r\n                        errors[\"lname\"] = \"Last name can't be similar\";\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        }\r\n\r\n\r\n        if (!fields[\"age\"]) {\r\n            formIsValid = false;\r\n            errors[\"age\"] = \"Cannot be empty\";\r\n        }\r\n\r\n        if (!fields[\"gpa\"]) {\r\n            formIsValid = false;\r\n            errors[\"gpa\"] = \"Cannot be empty\";\r\n        }\r\n\r\n        if (fields[\"folioClassId\"] === 0) {\r\n            formIsValid = false;\r\n            errors[\"folioClassId\"] = \"Cannot be empty\";\r\n        }\r\n\r\n        this.setState({ errors: errors });\r\n        return formIsValid;\r\n\r\n    }\r\n\r\n    contactSubmit(e) {\r\n        e.preventDefault();\r\n        const formData = this.state.fields;\r\n        if (typeof (formData.id) === 'undefined') {\r\n            if (this.handleSubmit()) {\r\n                //case of add\r\n                const requestOptions = {\r\n                    method: 'POST',\r\n                    headers: { 'Content-Type': 'application/json' },\r\n                    body: JSON.stringify({ formData })\r\n                };\r\n                console.log(JSON.stringify({ formData }));\r\n\r\n                fetch('https://6079395e460a6600174fb472.mockapi.io/api/v1/Students', requestOptions)\r\n                    .then(response => response.json());\r\n            } else {\r\n                alert(JSON.stringify(this.state.errors));\r\n            }\r\n        }\r\n        else {\r\n            //case of edit\r\n            if (this.handleSubmit()) {\r\n                const requestOptions = {\r\n                    method: 'PUT',\r\n                    headers: { 'Content-Type': 'application/json' },\r\n                    body: JSON.stringify({ formData })\r\n                };\r\n                console.log(JSON.stringify({ formData }));\r\n\r\n                fetch('https://6079395e460a6600174fb472.mockapi.io/api/v1/Students/' + id, requestOptions)\r\n                    .then(response => response.json());\r\n            } else {\r\n                alert(JSON.stringify(this.state.errors));\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        let _state = this.state;\r\n        const classOptions =this.state.classList.map(function(element){\r\n            return <option value={element.id} selected={element.id == _state.fields[\"folioClassId\"]} >{element.cname}</option>;\r\n        });\r\n        return (\r\n\r\n            <form onSubmit={this.contactSubmit.bind(this)}>\r\n                <table className=\"table table-bordered table-sm \">\r\n                    <tr>\r\n                        <td>\r\n                            <span className=\"required-field\">First Name</span>\r\n                        </td>\r\n                        <td>\r\n                            <input size=\"30\" type=\"text\" name=\"fname\" onChange={this.handleChange.bind(this, \"fname\")} value={this.state.fields[\"fname\"]} />\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>\r\n                            <span className=\"required-field\">Last Name</span>\r\n                        </td>\r\n                        <td>\r\n                            <input size=\"30\" type=\"text\" name=\"lname\" onChange={this.handleChange.bind(this, \"lname\")} value={this.state.fields[\"lname\"]} />\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td> <span className=\"required-field\">Age</span></td>\r\n                        <td><input type=\"number\" pattern=\"[0-9]*\" inputmode=\"numeric\" name=\"age\" onChange={this.handleChange.bind(this, \"age\")} value={this.state.fields[\"age\"]} /></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td><span>GPA</span></td>\r\n                        <td><input type=\"number\" step=\"0.01\" inputmode=\"numeric\" name=\"gpa\" onChange={this.handleChange.bind(this, \"gpa\")} value={this.state.fields[\"gpa\"]} /></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>\r\n                            <span className=\"required-field\">Class Name</span>\r\n                        </td>\r\n                        <td>\r\n                            <select name=\"folioClassId\" onChange={this.handleChange.bind(this, \"classList\")}   >\r\n                                <option value=\"0\">Select</option>\r\n                                { classOptions }\r\n                              \r\n                            </select>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>\r\n                            <button>Add Student</button>&nbsp;&nbsp; <Link to=\"/\" className=\"btn btn-primary\">Back to Main</Link>\r\n                        </td>\r\n                    </tr>\r\n                </table>\r\n            </form >\r\n        );\r\n    }\r\n}\r\n\r\nexport default StudentAdd;\r\n"]},"metadata":{},"sourceType":"module"}