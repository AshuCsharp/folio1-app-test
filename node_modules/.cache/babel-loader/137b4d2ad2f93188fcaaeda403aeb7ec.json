{"ast":null,"code":"var _jsxFileName = \"F:\\\\Project\\\\Web\\\\demoprojectreact\\\\src\\\\students\\\\StudentList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst StudentList = props => {\n  _s();\n\n  useEffect(() => {\n    fetch('https://6079395e460a6600174fb472.mockapi.io/api/v1/Students/' + props.rowId).then(res => res.json()).then(data => {\n      this.setState({\n        clist: data\n      });\n    }).catch(console.log);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Student Data\", props.rowId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"wrapped confluenceTable tablesorter tablesorter-default\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"tablesorter-headerRow\",\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Student Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Age\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"GPA\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: props.clist.map(el => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: [el.stuFName, \" \", el.stuLName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 31\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: el.stuAge\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: el.stuGpa\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 33\n          }, this)]\n        }, el.stuId, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n};\n\n_s(StudentList, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = StudentList;\nexport default StudentList;\n\nvar _c;\n\n$RefreshReg$(_c, \"StudentList\");","map":{"version":3,"sources":["F:/Project/Web/demoprojectreact/src/students/StudentList.js"],"names":["React","useState","useEffect","ReactDOM","StudentList","props","fetch","rowId","then","res","json","data","setState","clist","catch","console","log","map","el","stuFName","stuLName","stuAge","stuGpa","stuId"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,QAAP,MAAqB,WAArB;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAE3BH,EAAAA,SAAS,CAAC,MAAM;AACZI,IAAAA,KAAK,CAAC,iEAAgED,KAAK,CAACE,KAAvE,CAAL,CACCC,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAEOG,IAAD,IAAU;AACd,WAAKC,QAAL,CAAc;AAAEC,QAAAA,KAAK,EAAEF;AAAT,OAAd;AACD,KAJD,EAKCG,KALD,CAKOC,OAAO,CAACC,GALf;AAMD,GAPM,CAAT;AAQA,sBACI;AAAA,4BACI;AAAA,iCAAgBX,KAAK,CAACE,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAGI;AAAO,MAAA,SAAS,EAAC,yDAAjB;AAAA,8BACI;AAAA,+BACI;AAAI,UAAA,SAAS,EAAC,uBAAd;AAAA,kCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJJ,eAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPJ,eAUI;AAAA;AAAA;AAAA;AAAA,kBAVJ,eAaI;AAAA;AAAA;AAAA;AAAA,kBAbJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAqBI;AAAA,kBAEQF,KAAK,CAACQ,KAAN,CAAYI,GAAZ,CAAgBC,EAAE,iBACd;AAAA,kCAEE;AAAA,uBACOA,EAAE,CAACC,QADV,OACqBD,EAAE,CAACE,QADxB;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAMI;AAAA,sBACMF,EAAE,CAACG;AADT;AAAA;AAAA;AAAA;AAAA,kBANJ,eASI;AAAA,sBACMH,EAAE,CAACI;AADT;AAAA;AAAA;AAAA;AAAA,kBATJ,eAYI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAZJ,eAeI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAfJ;AAAA,WAASJ,EAAE,CAACK,KAAZ;AAAA;AAAA;AAAA;AAAA,gBADJ;AAFR;AAAA;AAAA;AAAA;AAAA,cArBJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAyDH,CAnED;;GAAMnB,W;;KAAAA,W;AAqEN,eAAeA,WAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nconst StudentList = (props) => {\r\n\r\n    useEffect(() => {\r\n        fetch('https://6079395e460a6600174fb472.mockapi.io/api/v1/Students/'+ props.rowId)\r\n        .then(res => res.json())\r\n        .then((data) => {\r\n          this.setState({ clist: data })\r\n        })\r\n        .catch(console.log) \r\n      });\r\n    return (\r\n        <div>\r\n            <p>Student Data{props.rowId}</p>\r\n\r\n            <table className=\"wrapped confluenceTable tablesorter tablesorter-default\">\r\n                <thead>\r\n                    <tr className=\"tablesorter-headerRow\">\r\n                        <th>\r\n                            Student Name\r\n                        </th>\r\n                        <th>\r\n                            Age\r\n                        </th>\r\n                        <th>\r\n                            GPA\r\n                        </th>\r\n                        <th>\r\n\r\n                        </th>\r\n                        <th>\r\n\r\n                        </th>\r\n\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        props.clist.map(el => (\r\n                            <tr key={el.stuId}>\r\n                              \r\n                              <td>\r\n                                    {el.stuFName} {el.stuLName}\r\n\r\n                                </td>\r\n                                <td>\r\n                                     {el.stuAge} \r\n                                </td>\r\n                                <td>\r\n                                     {el.stuGpa} \r\n                                </td>\r\n                                <td>\r\n                                    edit\r\n                                </td>\r\n                                <td>\r\n                                    delete\r\n                                </td>\r\n                            </tr>\r\n                        ))\r\n                    }\r\n                </tbody>\r\n            </table>     \r\n\r\n\r\n\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default StudentList;"]},"metadata":{},"sourceType":"module"}