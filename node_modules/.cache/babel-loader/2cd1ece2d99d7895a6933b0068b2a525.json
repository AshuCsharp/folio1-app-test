{"ast":null,"code":"var _jsxFileName = \"F:\\\\Project\\\\Web\\\\demoprojectreact\\\\src\\\\students\\\\StudentList.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from \"prop-types\";\nimport { toast } from \"react-toastify\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass StudentList extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  async componentDidMount() {\n    try {\n      const response = await fetch('http://localhost:55217/api/Students');\n      const result = await response.json();\n      this.setState({\n        isLoaded: true,\n        items: result.item1\n      });\n    } catch (error) {\n      this.setState({\n        error: true\n      });\n      console.log(error);\n    }\n  }\n\n  deleteStudent(id) {\n    let array = [...this.state.slist]; // make a separate copy of the array\n\n    let index = array.findIndex(x => x.stuId === id);\n\n    if (index !== -1) {\n      array.splice(index, 1);\n      this.setState({\n        slist: array\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Student Data \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table table-bordered\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \" Student Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Age\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"GPA\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [this.state.slist.filter(student => {\n            return student.id === parseInt(this.props.rowId);\n          }).map(el => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: [el.firstName, \" \", el.lastName]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: el.age\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: el.gpa\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => this.deleteStudent(el.id),\n                className: \"btn btn-light\",\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 37\n            }, this)]\n          }, el.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 33\n          }, this)), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              class: \"btn btn-light\",\n              children: \"ADD\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default StudentList;","map":{"version":3,"sources":["F:/Project/Web/demoprojectreact/src/students/StudentList.js"],"names":["React","ReactDOM","PropTypes","toast","StudentList","Component","constructor","props","componentDidMount","response","fetch","result","json","setState","isLoaded","items","item1","error","console","log","deleteStudent","id","array","state","slist","index","findIndex","x","stuId","splice","render","filter","student","parseInt","rowId","map","el","firstName","lastName","age","gpa"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport PropTypes from \"prop-types\";\r\nimport { toast } from \"react-toastify\";\r\n\r\n\r\nclass StudentList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n       \r\n\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            const response = await fetch('http://localhost:55217/api/Students');\r\n            const result = await response.json();\r\n            this.setState({ isLoaded: true, items: result.item1 });\r\n        } catch (error) {\r\n            this.setState({ error: true })\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n   \r\n\r\n    deleteStudent(id){    \r\n        let array = [...this.state.slist]; // make a separate copy of the array\r\n        let index = array.findIndex(x => x.stuId === id);\r\n        if (index !== -1) {\r\n          array.splice(index, 1);\r\n          this.setState({slist: array});\r\n        }      \r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n\r\n            <div>\r\n                <p>Student Data </p>\r\n                <table className=\"table table-bordered\">\r\n                    <thead>\r\n\r\n                        <tr>\r\n                            <th> Student Name</th>\r\n                            <th>Age</th>\r\n                            <th>GPA</th>\r\n                            <th></th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            this.state.slist.filter((student) => { return student.id === parseInt(this.props.rowId) }).map(el => (\r\n\r\n                                <tr key={el.id}>\r\n                                    <td>\r\n                                        {el.firstName} {el.lastName}\r\n                                    </td>\r\n                                    <td>\r\n                                        {el.age}\r\n                                    </td>\r\n                                    <td>\r\n                                        {el.gpa}\r\n                                    </td>\r\n                                    <td>\r\n                                        edit\r\n                                </td>\r\n                                    <td>\r\n                                        <button\r\n                                            onClick={() => this.deleteStudent(el.id)}\r\n                                            className=\"btn btn-light\"\r\n                                        >\r\n                                            Delete\r\n                                        </button>\r\n                                    </td>\r\n                                </tr>\r\n                            ))\r\n                        }\r\n                        <tr>\r\n                            <button type=\"button\" class=\"btn btn-light\">ADD</button>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default StudentList;\r\n\r\n"]},"metadata":{},"sourceType":"module"}