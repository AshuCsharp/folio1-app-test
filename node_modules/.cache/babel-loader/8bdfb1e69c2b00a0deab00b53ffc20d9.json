{"ast":null,"code":"var _jsxFileName = \"F:\\\\Project\\\\Web\\\\react-app\\\\src\\\\components\\\\students\\\\StudentList.js\";\nimport React from 'react';\nimport { Redirect, Link } from 'react-router-dom';\nimport * as dataApi from '../../api/dataApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass StudentList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      items: []\n    };\n  }\n\n  componentDidMount() {\n    try {\n      debugger;\n      dataApi.getStudentList().then(result => {\n        this.setState({\n          isLoaded: true,\n          items: result\n        }); //item1\n      });\n      console;\n    } catch {\n      this.setState({\n        error: true\n      });\n    }\n  }\n\n  deleteStudent(id) {\n    let array = [...this.state.items]; // make a separate copy of the array\n\n    let index = array.findIndex(x => x.id === id);\n\n    if (index !== -1) {\n      array.splice(index, 1);\n      this.setState({\n        items: array\n      });\n    }\n  }\n\n  render() {\n    const {\n      error,\n      isLoaded,\n      items\n    } = this.state;\n\n    if (this.state.items.length === 0) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"td\", {\n              colSpan: \"5\",\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/StudentAdd\",\n                className: \"btn btn-light\",\n                children: \"Add\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"table\", {\n        id: \"gpamax\",\n        className: \"table table-bordered table-sm\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          className: \"thead-light\",\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              colSpan: \"5\",\n              children: \"Student Data\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \" Student Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Age\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              id: \"kidid\",\n              children: \"GPA\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [items.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \" Blank\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 50\n          }, this) : items.filter(student => {\n            return student.folioClassId === parseInt(this.props.rowId);\n          }).map(el => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: [el.fname, \" \", el.lname]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: el.age\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              id: \"tdgpa\",\n              children: el.gpa\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\"  \", /*#__PURE__*/_jsxDEV(Link, {\n                to: `studentadd/${el.id}`,\n                params: {\n                  id: el.id\n                },\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 43\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => this.deleteStudent(el.id),\n                className: \"btn btn-light\",\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 37\n            }, this)]\n          }, el.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 33\n          }, this)), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"td\", {\n              colSpan: \"5\",\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/StudentAdd\",\n                className: \"btn btn-light\",\n                children: \"Add\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n}\n\nexport default StudentList;","map":{"version":3,"sources":["F:/Project/Web/react-app/src/components/students/StudentList.js"],"names":["React","Redirect","Link","dataApi","StudentList","Component","constructor","props","state","error","isLoaded","items","componentDidMount","getStudentList","then","result","setState","console","deleteStudent","id","array","index","findIndex","x","splice","render","length","filter","student","folioClassId","parseInt","rowId","map","el","fname","lname","age","gpa"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Redirect, Link } from 'react-router-dom';\r\nimport * as dataApi from '../../api/dataApi';\r\n\r\nclass StudentList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { error: null, isLoaded: false, items: [] };\r\n    }\r\n\r\n    componentDidMount() {\r\n       \r\n        try {\r\n          debugger;\r\n            dataApi.getStudentList().then((result) => {\r\n                this.setState({ isLoaded: true, items: result }); //item1\r\n            });\r\n            console\r\n        } catch {\r\n            this.setState({ error: true });\r\n        }\r\n    }\r\n\r\n    deleteStudent(id) {\r\n        let array = [...this.state.items]; // make a separate copy of the array\r\n        let index = array.findIndex(x => x.id === id);\r\n        if (index !== -1) {\r\n            array.splice(index, 1);\r\n            this.setState({ items: array });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { error, isLoaded, items } = this.state;\r\n        \r\n        if (this.state.items.length === 0) {\r\n            return (\r\n                <div>\r\n                    <p>\r\n                    <tr>\r\n                            <td colSpan=\"5\">\r\n                                <Link to=\"/StudentAdd\" className=\"btn btn-light\">Add</Link>\r\n                            </td>\r\n                        </tr>\r\n                    </p>\r\n                </div>\r\n            )\r\n        }\r\n        else {\r\n            return (\r\n                <table id=\"gpamax\" className=\"table table-bordered table-sm\">\r\n                    <thead className=\"thead-light\">\r\n                        <tr>\r\n                            <tr colSpan=\"5\">Student Data</tr>\r\n                        </tr>\r\n                        <tr>\r\n                            <th> Student Name</th>\r\n                            <th>Age</th>\r\n                            <th id=\"kidid\">GPA</th>\r\n                            <th></th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                     \r\n\r\n                        {\r\n                            items.length === 0 ? <p> Blank</p> :\r\n                         \r\n                            items.filter((student) => { return student.folioClassId === parseInt(this.props.rowId) }).map(el => (\r\n\r\n                                <tr key={el.id}>\r\n                                    <td>{el.fname} {el.lname}</td>\r\n                                    <td>{el.age}</td>\r\n                                    <td id=\"tdgpa\">{el.gpa}</td>\r\n                                    <td>  <Link to={`studentadd/${el.id}`} params={{ id: el.id }}>Edit</Link></td>\r\n                                    <td>\r\n                                        <button onClick={() => this.deleteStudent(el.id)} className=\"btn btn-light\">\r\n                                            Delete\r\n                                        </button>\r\n                                    </td>\r\n                                </tr>\r\n                            ))\r\n                        }\r\n\r\n                        <tr>\r\n                            <td colSpan=\"5\">\r\n                                <Link to=\"/StudentAdd\" className=\"btn btn-light\">Add</Link>\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default StudentList;\r\n\r\n"]},"metadata":{},"sourceType":"module"}