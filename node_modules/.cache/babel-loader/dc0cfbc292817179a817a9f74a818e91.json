{"ast":null,"code":"var _jsxFileName = \"F:\\\\Project\\\\Web\\\\react-app\\\\src\\\\components\\\\students\\\\StudentAdd.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Redirect, Link } from 'react-router-dom';\nimport * as dataApi from '../../api/dataApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass StudentAdd extends React.Component {\n  constructor(props) {\n    super(props); // state will hold the student data for add and edit, lnamedata is used to \n    //match the unique last name.\n\n    this.state = {\n      fields: {},\n      errors: {},\n      lnamedata: {}\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    let id = parseInt(this.props.match.params.id);\n\n    if (!isNaN(id)) {\n      //this is the case of edit\n      try {\n        dataApi.getStudentList().then(result => {\n          this.setState({\n            lnamedata: result.item1\n          }); //lnamedata will hold the student data                    \n\n          this.setState({\n            fields: result.item1.find(element => element.id === id)\n          }); //result wil hold the object that user is modifying \n        });\n      } catch (error) {\n        this.setState({\n          error: true\n        });\n      }\n    } else {\n      try {\n        dataApi.getStudentList().then(result => {\n          this.setState({\n            lnamedata: result.item1\n          });\n        });\n      } catch {\n        this.setState({\n          error: true\n        });\n      }\n    }\n  }\n\n  handleChange(field, e) {\n    let fields = this.state.fields;\n    fields[field] = e.target.value;\n    this.setState({\n      fields\n    });\n  } //this is where form validation checks\n\n\n  handleSubmit(event) {\n    let fields = this.state.fields;\n    let errors = {};\n    let formIsValid = true;\n\n    if (!fields[\"fname\"]) {\n      formIsValid = false;\n      errors[\"fname\"] = \"Cannot be empty\";\n    }\n\n    if (!fields[\"lname\"]) {\n      formIsValid = false;\n      errors[\"lname\"] = \"Cannot be empty\";\n    }\n\n    if (!fields[\"lname\"] === 'undefined') {\n      if (this.state.lnamedata.map(el => el.lname.toUpperCase()).indexOf(fields[\"lname\"].toUpperCase()) !== -1) {\n        formIsValid = false;\n        errors[\"lname\"] = \"Lastname Cannot be same \";\n      }\n    }\n\n    if (!fields[\"age\"]) {\n      formIsValid = false;\n      errors[\"age\"] = \"Cannot be empty\";\n    }\n\n    if (!fields[\"gpa\"]) {\n      formIsValid = false;\n      errors[\"gpa\"] = \"Cannot be empty\";\n    }\n\n    if (!fields[\"folioClassId\"]) {\n      formIsValid = false;\n      errors[\"folioClassId\"] = \"Cannot be empty\";\n    }\n\n    return formIsValid;\n  }\n\n  contactSubmit(e) {\n    e.preventDefault();\n    const formData = this.state.fields;\n\n    if (formData.id === 'undefined') {\n      if (this.handleSubmit()) {\n        //case of add\n        const requestOptions = {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            formData\n          })\n        };\n        console.log(JSON.stringify({\n          formData\n        })); //fetch('https://6079395e460a6600174fb472.mockapi.io/api/v1/folioclasses', requestOptions)\n        //    .then(response => response.json());\n      } else {\n        alert(\"Form has errors.\");\n      }\n    } else {\n      //case of edit\n      if (this.handleSubmit()) {\n        const requestOptions = {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            formData\n          })\n        };\n        console.log(JSON.stringify({\n          formData\n        })); //fetch('https://6079395e460a6600174fb472.mockapi.io/api/v1/folioclasses/id', requestOptions)\n        // .then(response => response.json());\n      } else {\n        alert(\"Form has errors.\");\n      }\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: this.contactSubmit.bind(this),\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table table-bordered table-sm \",\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"required-field\",\n              children: \"First Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              size: \"30\",\n              type: \"text\",\n              name: \"fname\",\n              onChange: this.handleChange.bind(this, \"fname\"),\n              value: this.state.fields[\"fname\"]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"required-field\",\n              children: \"Last Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              size: \"30\",\n              type: \"text\",\n              name: \"lname\",\n              onChange: this.handleChange.bind(this, \"lname\"),\n              value: this.state.fields[\"lname\"]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"required-field\",\n              children: \"Age\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 30\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              pattern: \"[0-9]*\",\n              inputmode: \"numeric\",\n              name: \"age\",\n              onChange: this.handleChange.bind(this, \"age\"),\n              value: this.state.fields[\"age\"]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"required-field\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"GPA\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 56\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              pattern: \"[0-9]*\",\n              inputmode: \"numeric\",\n              name: \"gpa\",\n              onChange: this.handleChange.bind(this, \"gpa\"),\n              value: this.state.fields[\"gpa\"]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"required-field\",\n              children: \"Class Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"select\", {\n              onChange: this.handleChange.bind(this, \"folioClassId\"),\n              value: this.state.fields[\"folioClassId\"],\n              value: \"1\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"1\",\n                children: \"Select\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"2\",\n                children: \"React\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"3\",\n                children: \"Angular\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"4\",\n                children: \"MVC\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              children: \"Add Student\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 29\n            }, this), \"\\xA0\\xA0 \", /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/\",\n              className: \"btn btn-primary\",\n              children: \"Back to Main\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 70\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default StudentAdd;","map":{"version":3,"sources":["F:/Project/Web/react-app/src/components/students/StudentAdd.js"],"names":["React","useState","useEffect","Redirect","Link","dataApi","StudentAdd","Component","constructor","props","state","fields","errors","lnamedata","handleChange","bind","handleSubmit","componentDidMount","id","parseInt","match","params","isNaN","getStudentList","then","result","setState","item1","find","element","error","field","e","target","value","event","formIsValid","map","el","lname","toUpperCase","indexOf","contactSubmit","preventDefault","formData","requestOptions","method","headers","body","JSON","stringify","console","log","alert","render"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Redirect, Link } from 'react-router-dom';\r\nimport * as dataApi from '../../api/dataApi';\r\n\r\n\r\nclass StudentAdd extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        // state will hold the student data for add and edit, lnamedata is used to \r\n        //match the unique last name.\r\n\r\n        this.state = {\r\n            fields: {},\r\n            errors: {},\r\n            lnamedata: {}\r\n        }\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        let id = parseInt(this.props.match.params.id);\r\n        if (!isNaN(id)) {\r\n            //this is the case of edit\r\n            try {\r\n                dataApi.getStudentList().then((result) => {\r\n                    this.setState({ lnamedata: result.item1 }) //lnamedata will hold the student data                    \r\n                    this.setState({ fields: result.item1.find(element => element.id === id) }); //result wil hold the object that user is modifying \r\n                });\r\n            } catch (error) {\r\n                this.setState({ error: true });\r\n            }\r\n        } else {\r\n            try {\r\n\r\n                dataApi.getStudentList().then((result) => {\r\n                    this.setState({ lnamedata: result.item1 });\r\n                });\r\n            } catch {\r\n                this.setState({ error: true });\r\n            }\r\n        }\r\n    }\r\n\r\n    handleChange(field, e) {\r\n        let fields = this.state.fields;\r\n        fields[field] = e.target.value;\r\n        this.setState({ fields });\r\n    }\r\n\r\n\r\n    //this is where form validation checks\r\n    handleSubmit(event) {\r\n        let fields = this.state.fields;\r\n        let errors = {};\r\n        let formIsValid = true;\r\n\r\n        \r\n\r\n\r\n        if (!fields[\"fname\"]) {\r\n            formIsValid = false;\r\n            errors[\"fname\"] = \"Cannot be empty\";\r\n        }\r\n\r\n        if (!fields[\"lname\"]) {\r\n            formIsValid = false;\r\n            errors[\"lname\"] = \"Cannot be empty\";\r\n        }\r\n\r\n       \r\n\r\n        if (!fields[\"lname\"] === 'undefined') {\r\n         \r\n\r\n            if (this.state.lnamedata.map(el => (el.lname).toUpperCase()).indexOf(fields[\"lname\"].toUpperCase()) !== -1) {\r\n                formIsValid = false;\r\n                errors[\"lname\"] = \"Lastname Cannot be same \";\r\n            }\r\n        }\r\n\r\n        if (!fields[\"age\"]) {\r\n            formIsValid = false;\r\n            errors[\"age\"] = \"Cannot be empty\";\r\n        }\r\n\r\n        if (!fields[\"gpa\"]) {\r\n            formIsValid = false;\r\n            errors[\"gpa\"] = \"Cannot be empty\";\r\n        }\r\n\r\n        if (!fields[\"folioClassId\"]) {\r\n            formIsValid = false;\r\n            errors[\"folioClassId\"] = \"Cannot be empty\";\r\n        }\r\n\r\n\r\n        return formIsValid;\r\n\r\n    }\r\n\r\n    contactSubmit(e) {\r\n        e.preventDefault();\r\n        const formData = this.state.fields;\r\n        if (formData.id === 'undefined') {\r\n            if (this.handleSubmit()) {\r\n                //case of add\r\n                const requestOptions = {\r\n                    method: 'POST',\r\n                    headers: { 'Content-Type': 'application/json' },\r\n                    body: JSON.stringify({ formData })\r\n                };\r\n                console.log(JSON.stringify({ formData }));\r\n\r\n                //fetch('https://6079395e460a6600174fb472.mockapi.io/api/v1/folioclasses', requestOptions)\r\n                //    .then(response => response.json());\r\n            } else {\r\n                alert(\"Form has errors.\")\r\n            }\r\n        }\r\n        else {\r\n            //case of edit\r\n            if (this.handleSubmit()) {\r\n                const requestOptions = {\r\n                    method: 'POST',\r\n                    headers: { 'Content-Type': 'application/json' },\r\n                    body: JSON.stringify({ formData })\r\n                };\r\n                console.log(JSON.stringify({ formData }));\r\n\r\n                //fetch('https://6079395e460a6600174fb472.mockapi.io/api/v1/folioclasses/id', requestOptions)\r\n                // .then(response => response.json());\r\n            } else {\r\n                alert(\"Form has errors.\")\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <form onSubmit={this.contactSubmit.bind(this)}>\r\n                <table className=\"table table-bordered table-sm \">\r\n                    <tr>\r\n                        <td>\r\n                            <span className=\"required-field\">First Name</span>\r\n                        </td>\r\n                        <td>\r\n                            <input size=\"30\" type=\"text\" name=\"fname\" onChange={this.handleChange.bind(this, \"fname\")} value={this.state.fields[\"fname\"]} />\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>\r\n                            <span className=\"required-field\">Last Name</span>\r\n                        </td>\r\n                        <td>\r\n                            <input size=\"30\" type=\"text\" name=\"lname\" onChange={this.handleChange.bind(this, \"lname\")} value={this.state.fields[\"lname\"]} />\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td> <span className=\"required-field\">Age</span></td>\r\n                        <td><input type=\"number\" pattern=\"[0-9]*\" inputmode=\"numeric\" name=\"age\" onChange={this.handleChange.bind(this, \"age\")} value={this.state.fields[\"age\"]} /></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td className=\"required-field\"><span>GPA</span></td>\r\n                        <td><input type=\"number\" pattern=\"[0-9]*\" inputmode=\"numeric\" name=\"gpa\" onChange={this.handleChange.bind(this, \"gpa\")} value={this.state.fields[\"gpa\"]} /></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>\r\n                            <span className=\"required-field\">Class Name</span>\r\n                        </td>\r\n                        <td>\r\n                            <select onChange={this.handleChange.bind(this, \"folioClassId\")} value={this.state.fields[\"folioClassId\"]} value=\"1\"  >\r\n                                <option value=\"1\">Select</option>\r\n                                <option value=\"2\">React</option>\r\n                                <option value=\"3\">Angular</option>\r\n                                <option value=\"4\">MVC</option>\r\n                            </select>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>\r\n                            <button>Add Student</button>&nbsp;&nbsp; <Link to=\"/\" className=\"btn btn-primary\">Back to Main</Link>\r\n                        </td>\r\n                    </tr>\r\n                </table>\r\n            </form >\r\n        );\r\n    }\r\n}\r\n\r\nexport default StudentAdd;\r\n"]},"metadata":{},"sourceType":"module"}