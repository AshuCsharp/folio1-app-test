{"ast":null,"code":"var _jsxFileName = \"F:\\\\Project\\\\Web\\\\react-app\\\\src\\\\components\\\\students\\\\StudentList.js\";\nimport React from 'react';\nimport { Redirect, Link } from 'react-router-dom';\nimport * as dataApi from '../../api/dataApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass StudentList extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getStudentlst = () => {\n      dataApi.getStudentList().then(result => {\n        this.setState({\n          isLoaded: true,\n          items: result\n        }); //item1\n      });\n    };\n\n    this.state = {\n      error: null,\n      isLoaded: false,\n      items: []\n    };\n  }\n\n  deleteStudent(id) {\n    let array = [...this.state.items]; // make a separate copy of the array\n\n    let index = array.findIndex(x => x.id === id);\n\n    if (index !== -1) {\n      array.splice(index, 1);\n      this.setState({\n        items: array\n      });\n    }\n  }\n\n  componentDidMount() {\n    try {\n      getStudentlst();\n    } catch {\n      this.setState({\n        error: true\n      });\n    }\n  }\n\n  render() {\n    const {\n      error,\n      isLoaded,\n      items\n    } = this.state;\n\n    if (this.state.items.length === 0) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/StudentAdd\",\n          className: \"btn btn-light\",\n          children: \"Add Student\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"table\", {\n        id: \"gpamax\",\n        className: \"table table-bordered table-sm\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          className: \"thead-light\",\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"td\", {\n              colSpan: \"5\",\n              children: \"Student Data\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \" Student Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Age\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"GPA\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [items.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \" Blank\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 36\n          }, this) : items.filter(student => {\n            return student.folioClassId === parseInt(this.props.rowId);\n          }).map(el => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: [el.fname, \" \", el.lname]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: el.age\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              id: \"tdgpa\",\n              children: el.gpa\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\"  \", /*#__PURE__*/_jsxDEV(Link, {\n                to: `studentadd/${el.id}`,\n                params: {\n                  id: el.id\n                },\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 27\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => this.deleteStudent(el.id),\n                className: \"btn btn-light\",\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 21\n            }, this)]\n          }, el.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 19\n          }, this)), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"td\", {\n              colSpan: \"5\",\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/StudentAdd\",\n                className: \"btn btn-light\",\n                children: \"Add\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n}\n\nexport default StudentList;","map":{"version":3,"sources":["F:/Project/Web/react-app/src/components/students/StudentList.js"],"names":["React","Redirect","Link","dataApi","StudentList","Component","constructor","props","getStudentlst","getStudentList","then","result","setState","isLoaded","items","state","error","deleteStudent","id","array","index","findIndex","x","splice","componentDidMount","render","length","filter","student","folioClassId","parseInt","rowId","map","el","fname","lname","age","gpa"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Redirect, Link } from 'react-router-dom';\r\nimport * as dataApi from '../../api/dataApi';\r\n\r\nclass StudentList extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { error: null, isLoaded: false, items: [] };\r\n  }\r\n\r\n  getStudentlst = () => {\r\n    dataApi.getStudentList().then((result) => {\r\n      this.setState({ isLoaded: true, items: result }); //item1\r\n    });\r\n  }\r\n\r\n  deleteStudent(id) {\r\n    let array = [...this.state.items]; // make a separate copy of the array\r\n    let index = array.findIndex(x => x.id === id);\r\n    if (index !== -1) {\r\n      array.splice(index, 1);\r\n      this.setState({ items: array });\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    try {\r\n      getStudentlst();\r\n    } catch {\r\n      this.setState({ error: true });\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  render() {\r\n    const { error, isLoaded, items } = this.state;\r\n\r\n    if (this.state.items.length === 0) {\r\n      return (\r\n        <div>\r\n          <Link to=\"/StudentAdd\" className=\"btn btn-light\">Add Student</Link>\r\n        </div>\r\n      )\r\n    }\r\n    else {\r\n      return (\r\n        <table id=\"gpamax\" className=\"table table-bordered table-sm\">\r\n          <thead className=\"thead-light\">\r\n            <tr>\r\n              <td colSpan=\"5\">Student Data</td>\r\n            </tr>\r\n            <tr>\r\n              <th> Student Name</th>\r\n              <th>Age</th>\r\n              <th>GPA</th>\r\n              <th></th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n\r\n\r\n            {\r\n              items.length === 0 ? <p> Blank</p> :\r\n\r\n                items.filter((student) => { return student.folioClassId === parseInt(this.props.rowId) }).map(el => (\r\n\r\n                  <tr key={el.id}>\r\n                    <td>{el.fname} {el.lname}</td>\r\n                    <td>{el.age}</td>\r\n                    <td id=\"tdgpa\">{el.gpa}</td>\r\n                    <td>  <Link to={`studentadd/${el.id}`} params={{ id: el.id }}>Edit</Link></td>\r\n                    <td>\r\n                      <button onClick={() => this.deleteStudent(el.id)} className=\"btn btn-light\">Delete</button>\r\n                    </td>\r\n                  </tr>\r\n                ))\r\n            }\r\n            <tr>\r\n              <td colSpan=\"5\">\r\n                <Link to=\"/StudentAdd\" className=\"btn btn-light\">Add</Link>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      );\r\n    }\r\n  }\r\n}\r\n  export default StudentList;"]},"metadata":{},"sourceType":"module"}