{"ast":null,"code":"var _jsxFileName = \"F:\\\\Project\\\\Web\\\\demoprojectreact\\\\src\\\\components\\\\students\\\\StudentList.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from \"prop-types\";\nimport { toast } from \"react-toastify\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass StudentList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      items: [],\n      gpaArray: [],\n      highestGPA: 0.0\n    };\n  }\n\n  async componentDidMount() {\n    try {\n      const response = await fetch('http://localhost:55217/api/Students');\n      const result = await response.json();\n      this.setState({\n        isLoaded: true,\n        items: result.item1\n      });\n    } catch (error) {\n      this.setState({\n        error: true\n      });\n      console.log(error);\n    }\n  }\n\n  deleteStudent(id) {\n    let array = [...this.state.items]; // make a separate copy of the array\n\n    let index = array.findIndex(x => x.id === id);\n\n    if (index !== -1) {\n      array.splice(index, 1);\n      this.setState({\n        items: array\n      });\n    }\n  }\n\n  render() {\n    const {\n      error,\n      isLoaded,\n      items\n    } = this.state;\n\n    if (error) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Error: \", error]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Student Data \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table table-bordered\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \" Student Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Age\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"GPA\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: [this.setState({\n              gpaArray: items.filter(student => {\n                return student.folioClassId === parseInt(this.props.rowId);\n              }).map(el => el.gpa)\n            }), items.filter(student => {\n              return student.folioClassId === parseInt(this.props.rowId);\n            }).map(el => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [this.highestGPA >= el.gpa ? /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"em\", {\n                  children: [el.firstName, \" \", el.lastName]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 76\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 72\n              }, this) : /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [el.firstName, \" \", el.lastName]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: el.age\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: el.gpa\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => this.deleteStudent(el.id),\n                  className: \"btn btn-light\",\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 89,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 41\n              }, this)]\n            }, el.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 37\n            }, this)), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"btn btn-light\",\n                children: \"ADD\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n}\n\nexport default StudentList;","map":{"version":3,"sources":["F:/Project/Web/demoprojectreact/src/components/students/StudentList.js"],"names":["React","ReactDOM","PropTypes","toast","StudentList","Component","constructor","props","state","error","isLoaded","items","gpaArray","highestGPA","componentDidMount","response","fetch","result","json","setState","item1","console","log","deleteStudent","id","array","index","findIndex","x","splice","render","filter","student","folioClassId","parseInt","rowId","map","el","gpa","firstName","lastName","age"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport PropTypes from \"prop-types\";\r\nimport { toast } from \"react-toastify\";\r\n\r\n\r\nclass StudentList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { error: null, isLoaded: false, items: [], gpaArray:[], highestGPA:0.0 };\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            const response = await fetch('http://localhost:55217/api/Students');\r\n            const result = await response.json();\r\n            this.setState({ isLoaded: true, items: result.item1 });\r\n        } catch (error) {\r\n            this.setState({ error: true })\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    deleteStudent(id) {\r\n        let array = [...this.state.items]; // make a separate copy of the array\r\n        let index = array.findIndex(x => x.id === id);\r\n        if (index !== -1) {\r\n            array.splice(index, 1);\r\n            this.setState({ items: array });\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    render() {\r\n        const { error, isLoaded, items } = this.state;\r\n        if (error) {\r\n            return (\r\n                <div>\r\n                    <p>\r\n                        Error: {error}\r\n                    </p>\r\n                </div>\r\n            )\r\n        }\r\n        else {\r\n            return (\r\n\r\n                <div>\r\n                    <p>Student Data </p>\r\n                    <table className=\"table table-bordered\">\r\n                        <thead>\r\n\r\n                            <tr>\r\n                                <th> Student Name</th>\r\n                                <th>Age</th>\r\n                                <th>GPA</th>\r\n                                <th></th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            \r\n                            {this.setState({gpaArray: (items.filter((student) => { return student.folioClassId === parseInt(this.props.rowId) }).map(el => el.gpa))})}\r\n                            {\r\n                                \r\n                                items.filter((student) => { return student.folioClassId === parseInt(this.props.rowId) }).map(el => (\r\n                                    \r\n\r\n                                    <tr key={el.id}>\r\n                                        {(this.highestGPA >= el.gpa) ? <td><em>{el.firstName} {el.lastName}</em></td> :  \r\n                                        <td>{el.firstName} {el.lastName}</td>\r\n                                        }\r\n                                       \r\n                                        <td>\r\n                                            {el.age}\r\n                                        </td>\r\n                                        <td>\r\n                                            {el.gpa}\r\n                                        </td>\r\n                                        <td>\r\n                                            edit\r\n                                </td>\r\n                                        <td>\r\n                                            <button\r\n                                                onClick={() => this.deleteStudent(el.id)}\r\n                                                className=\"btn btn-light\"\r\n                                            >\r\n                                                Delete\r\n                                        </button>\r\n                                        </td>\r\n                                    </tr>\r\n                                ))\r\n                            }\r\n                            <tr>\r\n                                <button type=\"button\" className=\"btn btn-light\">ADD</button>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default StudentList;\r\n\r\n"]},"metadata":{},"sourceType":"module"}