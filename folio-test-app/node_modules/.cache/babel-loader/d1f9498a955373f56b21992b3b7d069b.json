{"ast":null,"code":"var _jsxFileName = \"F:\\\\Project\\\\Web\\\\demoprojectreact\\\\src\\\\components\\\\classes\\\\ClassesList.js\";\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport StudentList from '../students/StudentList';\nimport { Redirect, Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ClassesList extends React.Component {\n  constructor(prop) {\n    super(prop);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      items: [],\n      rid: 0,\n      redirectToAddClassPage: false\n    };\n  }\n\n  async componentDidMount() {\n    try {\n      const response = await fetch('http://localhost:55217/api/folioclasses');\n      const result = await response.json();\n      this.setState({\n        isLoaded: true,\n        items: result.item1\n      });\n    } catch (error) {\n      this.setState({\n        error: true\n      });\n      console.log(error);\n    }\n  }\n\n  deleteClass(id) {\n    console.log(id); //let arrayClass = [...props.clist];\n    // let classIndex = arrayClass.findIndex(a => a.clsId === id);\n    // if (classIndex !== -1) {\n    // arrayClass.splice(classIndex, 1);\n    // }\n  }\n\n  handleClick(id) {\n    this.setState({\n      rid: id\n    });\n  }\n\n  handleEdit(id) {\n    alert(id);\n  }\n\n  render() {\n    let {\n      error,\n      isLoaded,\n      items\n    } = this.state;\n\n    if (error) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Error: \", error]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Class Data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table table-bordered\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \" Class Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Location\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Teacher Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: [items.map(el => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                onClick: () => this.handleClick(el.id),\n                style: {\n                  cursor: 'pointer'\n                },\n                children: el.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                onClick: () => this.handleClick(el.id),\n                style: {\n                  cursor: 'pointer'\n                },\n                children: el.location\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: el.teacherName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => this.handleEdit(el.id),\n                  className: \"btn btn-light\",\n                  children: \"Edit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 91,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => this.deleteClass(el.id),\n                  className: \"btn btn-light\",\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 99,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 41\n              }, this)]\n            }, el.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 37\n            }, this)), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [this.state.redirectToAddClassPage && /*#__PURE__*/_jsxDEV(Redirect, {\n                  to: \"/manageclasses\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 110,\n                  columnNumber: 75\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  onClick: () => this.setState({\n                    redirectToAddCoursePage: true\n                  }),\n                  children: \"ADD\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 111,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), this.state.rid > 0 ? /*#__PURE__*/_jsxDEV(StudentList, {\n          rowId: this.state.rid\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 43\n        }, this) : \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n}\n\nexport default ClassesList;","map":{"version":3,"sources":["F:/Project/Web/demoprojectreact/src/components/classes/ClassesList.js"],"names":["React","useState","ReactDOM","StudentList","Redirect","Link","ClassesList","Component","constructor","prop","state","error","isLoaded","items","rid","redirectToAddClassPage","componentDidMount","response","fetch","result","json","setState","item1","console","log","deleteClass","id","handleClick","handleEdit","alert","render","map","el","cursor","name","location","teacherName","redirectToAddCoursePage"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport StudentList from '../students/StudentList';\r\nimport { Redirect, Link } from \"react-router-dom\";\r\n\r\n\r\nclass ClassesList extends React.Component {\r\n    constructor(prop) {\r\n        super(prop);\r\n        this.state = { error: null, isLoaded: false, items: [], rid: 0, redirectToAddClassPage: false };\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            const response = await fetch('http://localhost:55217/api/folioclasses');\r\n            const result = await response.json();\r\n            this.setState({ isLoaded: true, items: result.item1 });\r\n        } catch (error) {\r\n            this.setState({ error: true })\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    deleteClass(id) {\r\n        console.log(id);\r\n        //let arrayClass = [...props.clist];\r\n\r\n        // let classIndex = arrayClass.findIndex(a => a.clsId === id);\r\n        // if (classIndex !== -1) {\r\n        // arrayClass.splice(classIndex, 1);\r\n\r\n        // }\r\n    }\r\n\r\n  \r\n\r\n    handleClick(id) {\r\n\r\n        this.setState({ rid: id });\r\n    }\r\n\r\n    handleEdit(id){\r\n        alert(id);\r\n        \r\n\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        let { error, isLoaded, items } = this.state;\r\n        if (error) {\r\n            return (\r\n                <div>\r\n                    <p>\r\n                        Error: {error}\r\n                    </p>\r\n                </div>\r\n            )\r\n        }\r\n        else {\r\n            return (\r\n                <div>\r\n                    <p>Class Data</p>\r\n                    <table className=\"table table-bordered\">\r\n                        <thead>\r\n\r\n                            <tr>\r\n                                <th> Class Name</th>\r\n                                <th>Location</th>\r\n                                <th>Teacher Name</th>\r\n                                <th></th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                items.map(el => (\r\n\r\n                                    <tr key={el.id}>\r\n                                        <td onClick={() => this.handleClick(el.id)} style={{ cursor: 'pointer' }}>\r\n                                            {el.name}\r\n                                        </td>\r\n                                        <td onClick={() => this.handleClick(el.id)} style={{ cursor: 'pointer' }}>\r\n                                            {el.location}\r\n                                        </td>\r\n                                        <td>\r\n                                            {el.teacherName}\r\n                                        </td>\r\n                                        <td>\r\n                                        <button\r\n                                                onClick={() => this.handleEdit(el.id)}\r\n                                                className=\"btn btn-light\"\r\n                                            >\r\n                                                Edit\r\n                                        </button>\r\n                                        </td>\r\n                                        <td>\r\n                                            <button\r\n                                                onClick={() => this.deleteClass(el.id)}\r\n                                                className=\"btn btn-light\"\r\n                                            >\r\n                                                Delete\r\n                                        </button>\r\n                                        </td>\r\n                                    </tr>))\r\n                            }\r\n                            <tr>\r\n                                <td>\r\n                                    {this.state.redirectToAddClassPage && <Redirect to=\"/manageclasses\" />}\r\n                                    <button type=\"button\" onClick={() => this.setState({ redirectToAddCoursePage: true })} >ADD</button>\r\n\r\n                                </td>\r\n                            </tr>\r\n\r\n\r\n                        </tbody>\r\n\r\n\r\n\r\n                    </table>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                    {this.state.rid > 0 ? <StudentList rowId={this.state.rid} /> : \" \"}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                </div>\r\n\r\n\r\n\r\n            );\r\n        }\r\n    }\r\n\r\n\r\n}\r\nexport default ClassesList;"]},"metadata":{},"sourceType":"module"}